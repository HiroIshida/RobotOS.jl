:($(Expr(:toplevel, :(module trajectory_msgs
  #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:323 =#
  #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:323 =#
  module msg
  #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:331 =#
  #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:331 =#
  begin
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:366 =#
      using PyCall
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:367 =#
      import Base: convert, getproperty
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:368 =#
      import RobotOS
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:369 =#
      import RobotOS.Time
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:370 =#
      import RobotOS.Duration
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:371 =#
      import RobotOS._typedefault
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:372 =#
      import RobotOS._typerepr
  end
  import RobotOS.AbstractMsg
  using Main.std_msgs.msg
  export JointTrajectoryPoint, JointTrajectory
  mutable struct JointTrajectoryPoint <: AbstractMsg
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:497 =#
      positions::Array{Float64, 1}
      velocities::Array{Float64, 1}
      accelerations::Array{Float64, 1}
      effort::Array{Float64, 1}
      time_from_start::Duration
  end
  function JointTrajectoryPoint()
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:503 =#
      JointTrajectoryPoint([0.0 for i = 1:0], [0.0 for i = 1:0], [0.0 for i = 1:0], [0.0 for i = 1:0], Duration(0, 0))
  end
  function convert(::Type{PyObject}, o::JointTrajectoryPoint)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:512 =#
      py = pycall(RobotOS._rospy_objects["trajectory_msgs/JointTrajectoryPoint"], PyObject)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:514 =#
      py.:("positions") = o.positions
      py.:("velocities") = o.velocities
      py.:("accelerations") = o.accelerations
      py.:("effort") = o.effort
      py.:("time_from_start") = convert(PyObject, o.time_from_start)
      py
  end
  function convert(jlt::Type{JointTrajectoryPoint}, o::PyObject)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:520 =#
      if convert(String, o.:("_type")) != _typerepr(jlt)
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:521 =#
          throw(InexactError(:convert, JointTrajectoryPoint, o))
      end
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:523 =#
      jl = JointTrajectoryPoint()
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:525 =#
      jl.positions = convert(Array{Float64, 1}, o.:("positions"))
      jl.velocities = convert(Array{Float64, 1}, o.:("velocities"))
      jl.accelerations = convert(Array{Float64, 1}, o.:("accelerations"))
      jl.effort = convert(Array{Float64, 1}, o.:("effort"))
      jl.time_from_start = convert(Duration, o.:("time_from_start"))
      jl
  end
  function getproperty(::Type{JointTrajectoryPoint}, s::Symbol)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:531 =#
      try
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:531 =#
          getproperty(RobotOS._rospy_objects["trajectory_msgs/JointTrajectoryPoint"], s)
      catch ex
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:533 =#
          ex isa KeyError || rethrow(ex)
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:534 =#
          try
              #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:534 =#
              getfield(JointTrajectoryPoint, s)
          catch ex2
              #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:536 =#
              startswith(ex2.msg, "type DataType has no field") || rethrow(ex2)
              #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:537 =#
              error("Message type '" * "JointTrajectoryPoint" * "' has no property '$(s)'.")
          end
      end
  end
  _typerepr(::Type{JointTrajectoryPoint}) = begin
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:549 =#
          "trajectory_msgs/JointTrajectoryPoint"
      end
  mutable struct JointTrajectory <: AbstractMsg
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:497 =#
      header::Header
      joint_names::Array{String, 1}
      points::Array{JointTrajectoryPoint, 1}
  end
  function JointTrajectory()
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:503 =#
      JointTrajectory(Header(), ["" for i = 1:0], [JointTrajectoryPoint() for i = 1:0])
  end
  function convert(::Type{PyObject}, o::JointTrajectory)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:512 =#
      py = pycall(RobotOS._rospy_objects["trajectory_msgs/JointTrajectory"], PyObject)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:514 =#
      py.:("header") = convert(PyObject, o.header)
      py.:("joint_names") = o.joint_names
      py.:("points") = convert(Array{PyObject, 1}, o.points)
      py
  end
  function convert(jlt::Type{JointTrajectory}, o::PyObject)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:520 =#
      if convert(String, o.:("_type")) != _typerepr(jlt)
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:521 =#
          throw(InexactError(:convert, JointTrajectory, o))
      end
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:523 =#
      jl = JointTrajectory()
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:525 =#
      jl.header = convert(Header, o.:("header"))
      jl.joint_names = convert(Array{String, 1}, o.:("joint_names"))
      jl.points = convert(Array{JointTrajectoryPoint, 1}, o.:("points"))
      jl
  end
  function getproperty(::Type{JointTrajectory}, s::Symbol)
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:531 =#
      try
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:531 =#
          getproperty(RobotOS._rospy_objects["trajectory_msgs/JointTrajectory"], s)
      catch ex
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:533 =#
          ex isa KeyError || rethrow(ex)
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:534 =#
          try
              #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:534 =#
              getfield(JointTrajectory, s)
          catch ex2
              #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:536 =#
              startswith(ex2.msg, "type DataType has no field") || rethrow(ex2)
              #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:537 =#
              error("Message type '" * "JointTrajectory" * "' has no property '$(s)'.")
          end
      end
  end
  _typerepr(::Type{JointTrajectory}) = begin
          #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:549 =#
          "trajectory_msgs/JointTrajectory"
      end
  end
  import RobotOS.@rosimport
  function __init__()
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:324 =#
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:338 =# @rosimport trajectory_msgs.msg:JointTrajectoryPoint
      #= /home/anne/documents/julia/RobotOS.jl/src/gentypes.jl:338 =# @rosimport trajectory_msgs.msg:JointTrajectory
  end
  end))))